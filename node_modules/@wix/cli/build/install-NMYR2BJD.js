import { createRequire as _createRequire } from 'node:module';
const require = _createRequire(import.meta.url);
import{a as h,b as C,c as D,d as j,f as N}from"./chunk-BDHYHYNF.js";import"./chunk-LMHUDNUL.js";import{b as P}from"./chunk-L6THNSVV.js";import"./chunk-H7EI5QTD.js";import{a as I}from"./chunk-LKDAZ74H.js";import"./chunk-CCZ55TG3.js";import{a as f}from"./chunk-CMATXU5D.js";import"./chunk-XOWZQRGH.js";import"./chunk-AS6UX65B.js";import"./chunk-J7ENM3TA.js";import"./chunk-BG2UJUYU.js";import"./chunk-4YVTD2GL.js";import"./chunk-Z2UWNMEU.js";import"./chunk-ZBJRW65P.js";import"./chunk-H5MPJJNF.js";import{a as y,b as u,c as m,d as w}from"./chunk-DOFJ7BQV.js";import"./chunk-6L4DBTEA.js";import"./chunk-TVPGNQRX.js";import"./chunk-YXF3QNRI.js";import"./chunk-W3TVB5TS.js";import{f as g,g as d}from"./chunk-5BCJKJOV.js";import"./chunk-DUF2VEL4.js";import{c,e as s}from"./chunk-2OKEAQXU.js";import{i as t}from"./chunk-UO4ZAUJK.js";t();t();import{cwd as E}from"node:process";t();async function x(e,o,n,a,r){let i;try{e?(i=r.logDependencyInstalling(e,null),await j(e,null,o.projectFolder,a)):(i=r.logAllDependenciesInstalling(),await N(o.projectFolder,a)),await D(o.projectFolder,{authState:n})}finally{i&&i()}}t();import{unlink as k}from"node:fs/promises";t();async function M(e){let o=await g(m(e));try{return u.parse(o)}catch(n){throw new c({code:s.InvalidVeloConfigJson({configFilename:y,cause:n})})}}var A=async(e,o)=>{let n=m(e);if(await d(n))try{o.logMigratingToAnyNpm();let a=await M(e);await C(e,a),await k(n),o.logMigrationToAnyNpmCompletedSuccessfully()}catch(a){throw o.logMigrationToAnyNpmFailed(a),a}};async function T({biLogger:e,errorReporter:o},n,a){let r=await w(E()),i=await I({metaSiteId:r.metaSiteId,biLogger:e,errorReporter:o}),F=f(),p=P({t:F}),S=a?.trim()??null,l;n.yarn?l="yarn":n.npm?l="npm":l=await h(r.projectFolder),await A(r.projectFolder,p),await x(S,r,i,l,p)}export{T as install};
//# sourceMappingURL=install-NMYR2BJD.js.map